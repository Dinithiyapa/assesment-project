name: Build and Deploy Node.js App with Docker

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository again for deployment tasks
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up SSH for deployment (e.g., to a remote EC2 server)
    - name: Set up SSH and deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}  # EC2 public IP or DNS name
        username: ${{ secrets.SSH_USER }}  # SSH user (e.g., 'ubuntu')
        key: ${{ secrets.KEY }}  # SSH private key (ensure it's base64 encoded if required)
        port: ${{ secrets.SSH_PORT }}  # Default is 22 for EC2 instances
        script: |
          echo "SSH into EC2 Instance Successful"

          # Navigate to the EC2 home directory
          cd /home/ubuntu  # Or your user's home directory if different

          # Remove the existing nodejs-app directory (if it exists)
          echo "Removing existing nodejs-app directory..."
          sudo rm -rf nodejs-app || true

          # Create a new nodejs-app directory and navigate into it
          echo "Creating and navigating into nodejs-app directory..."
          sudo mkdir nodejs-app
          cd nodejs-app

          # Copy the Dockerfile, docker-compose.yml, and index.js to nodejs-app directory
          echo "Copying Dockerfile, docker-compose.yml, and index.js to the current directory..."
          sudo cp $GITHUB_WORKSPACE/Dockerfile ./Dockerfile
          sudo cp $GITHUB_WORKSPACE/docker-compose.yml ./docker-compose.yml
          sudo cp $GITHUB_WORKSPACE/index.js ./index.js  # Copy index.js

          # Navigate back to the home directory to copy nginx.conf
          cd ..
          echo "Copying nginx.conf to /etc/nginx/nginx.conf..."
          sudo mkdir -p /etc/nginx  # Ensure the directory exists
          sudo cp $GITHUB_WORKSPACE/nginx.conf /etc/nginx/nginx.conf

          # Navigate back to the nodejs-app directory
          cd nodejs-app

          # Stop and remove any running containers (if any)
          echo "Stopping and removing all containers..."
          sudo docker stop $(docker ps -aq) || true
          sudo docker rm $(docker ps -aq) || true

          # Start the Docker containers using Docker Compose
          echo "Starting Docker containers with Docker Compose..."
          sudo docker-compose up -d

          echo "Deployment complete!"
